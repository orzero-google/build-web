为简化步骤,重新设计
只存储远程地址,需要的页面直接取


分为四部分:



1.取得数据[GetPG.php]
	给出网址,通过php代理取得页面内容
2.分析,提取数据(1.生成导航[mkRoute.php];2.采集内容[mkContent.php])
	取得需要的内容
3.存储数据([SaveData.php]:[DoDB.php]:[DoFile.php])
	数据入库,写成接口形式(数据库.表.操作方式(插入,取出).字段=>值)
4.前台生成[NewPG.php]([GetData.php]:[DoDB.php]:[DoFile.php])(以每条帖子为单位)
	在这一步再完成编码等工作


1~3部分:后台用js控制流程,php实现

4部分:完全通过php实现

目标:
js全部通过jquery实现,界面通过jquery+ui实现




方法二:目录：tianya_v4
一:分析网址\取得导航\生成列表(后台:[mkList.php];	前台格式,同时可以反馈当前页面状态:md5($first_url)/index.php;	)
二:取得当前页面\重新构造页面(后台:[mkRead.php];		前台格式,seo:可以直接通过网址取得不同的状态:md5($first_url)/read.php;	)

实现:
代理,两种方式,一种直接取得,一种需要参数(对用户不可见,1研究如何转移到客户端,2客户端更新服务端数据)：取得内容: md5($first_url)/GetPG.php;		取得导航: GetPG.php
	
	
后台入口:即方法一的实现		入口:?url=, 返回:[md5($first_url)/index.php]

数据缓存(最后实现1压缩方式)：cache/[base64_encode($first_url)]/[base64_encode($url) | $pid].php
	实现:增加缓存层,优先级别(缓存,具体目标),缓存保存方式
	
信息收集,js实现,对一些数据整合(访问,具体位置,etc.)

执行文件本身可升级


数据库：
id:
链接：		base64(url)关键字
路径：		dir/file
内容状态:	动,静
时间：		

开始实施20091130

/**
 *	数据存取层已经完成20091204
 */
 
开始页面构造开始20091204

页面元素：
title
author
keywords
description


20091211第一版完成,兼容性不好,改用jquery-ui设计第二版

20091221 js，ui基本完成，开始数据库设计
	CREATE TABLE `tianya_info` (
	`tianya_infoid` int(11) NOT NULL auto_increment,
	`name` VARCHAR(255) NOT NULL,
	`type` TINYINT NOT NULL,
	`channel_en` VARCHAR(255) NOT NULL,
	`channel_cn` VARCHAR(255) NOT NULL,
	`title` VARCHAR(255) NOT NULL,
	`author_id` INT NOT NULL,
	`author_name` VARCHAR(255) NOT NULL,
	`pid_list` TEXT NOT NULL,
	`time` TIME NOT NULL, PRIMARY KEY  (`tianya_infoid`)) ENGINE=MyISAM;
	
	CREATE TABLE `tianya_content` (
	`tianya_contentid` int(11) NOT NULL auto_increment,
	`info_id` INT NOT NULL,
	`pg_id` INT NOT NULL,
	`page_num` MEDIUMINT NOT NULL,
	`url` VARCHAR(255) NOT NULL,
	`dir` VARCHAR(255) NOT NULL, PRIMARY KEY  (`tianya_contentid`)) ENGINE=MyISAM;